{"version":3,"sources":["components/NavBar/NavBar.js","components/TableHeader/TableHeader.js","components/TableBody/TableBody.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","type","placeholder","aria-label","name","value","location","onChange","handleInputChange","TableHeader","scope","onClick","sortID","sortFirstName","sortLastName","sortOccupation","sortLocation","TableBody","employee","Object","keys","map","key","App","state","employees","original","event","target","setState","newLocation","filter","toLowerCase","includes","sort","a","b","id","firstName","lastName","occupation","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02a3d019.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NavBar(props) {\nreturn(\n    <div className=\"contatiner\"> \n        <nav className=\"navbar navbar-primary bg-primary justify-content-between\">\n            <span className=\"navbar-brand mb-0 h1\"> Employee Directory!</span>\n            <form className=\"form-inline\">\n                <input \n                className=\"form-control mr-sm-2\" \n                type=\"search\" \n                placeholder=\"Search Locations\" \n                aria-label=\"Search\"\n                name=\"location\"\n                value={props.location}\n                onChange={props.handleInputChange}\n                />\n\n            </form>\n        </nav>\n    </div>\n)\n}\n\nexport default NavBar;","import React from \"react\";\n\nfunction TableHeader(props) {\n    return (\n        <thead>\n            <tr>\n            <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortID()}>ID:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortFirstName()}>First Name:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortLastName()}>Last:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortOccupation()}>Occupation:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortLocation()}>Location:</button></th>\n                \n            </tr>\n            </thead>\n    )\n}\n\nexport default TableHeader;","import React from \"react\";\n\nfunction TableBody(props) {\n    let employee = props.employee;\n    return (\n        <tr>\n            {Object.keys(employee).map((key) => (\n                <td>{employee[key]}</td>\n            ))}\n        </tr>\n    )\n}\n\nexport default TableBody;","import React, { Component } from \"react\";\nimport employees from \"./data/employees.json\";\nimport NavBar from \"./components/NavBar/NavBar\"\n//import EmployeeTable from \"./components/EmployeeTable/EmployeeTable\";\nimport TableHeader from \"./components/TableHeader/TableHeader\";\nimport TableBody from \"./components/TableBody/TableBody\";\n\n\nclass App extends Component {\n  state = {\n    employees,\n    location: \"\",\n    original: employees\n  };\n \n  //Filter Search -> Add all fields to be filtered\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({[name]:value});\n    const newLocation = this.state.original.filter((employee) => {\n      return employee.location.toLowerCase().includes(value.toLowerCase());\n    });\n    this.setState({employees: newLocation});\n  };\n\n  //Sort Functions -> Condense down to one sorting function in the future\n  sortID= () => {\n    let employees = this.state.employees.sort((a, b) => (a.id > b.id) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortFirstName = () => {\n    let employees = this.state.employees.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortLastName = () => {\n    let employees = this.state.employees.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortOccupation = () => {\n    let employees = this.state.employees.sort((a, b) => (a.occupation > b.occupation) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortLocation = () => {\n    let employees = this.state.employees.sort((a, b) => (a.location > b.location) ? 1 : -1)\n    this.setState({employees});\n  };\n  \n\n  render() {\n    return (\n      <div>\n      <NavBar \n      location={this.state.location}\n      handleInputChange={this.handleInputChange} />\n      <table className=\"table table-sm table-striped\">\n      <TableHeader \n      employee={employees}\n      sortID={this.sortID}\n      sortFirstName={this.sortFirstName}\n      sortLastName={this.sortLastName}\n      sortOccupation={this.sortOccupation}\n      sortLocation={this.sortLocation}/>\n      <tbody>\n        {this.state.employees.map((employee) => (\n          <TableBody employee={employee} />\n        ))}\n      </tbody>\n      </table>\n      </div>\n      \n    )\n  }\n  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}