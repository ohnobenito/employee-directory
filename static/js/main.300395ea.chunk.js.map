{"version":3,"sources":["components/NavBar/NavBar.js","components/EmployeeTable/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","type","placeholder","aria-label","EmployeeTable","props","scope","onClick","sortFirstName","sortLastName","sortOccupation","sortLocation","employees","map","info","firstName","lastName","occupation","location","App","state","original","handleInputChange","event","target","name","value","setState","newLocation","filter","employee","toLowerCase","includes","sort","a","b","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAiBeA,MAff,WACA,OACI,qBAAKC,UAAU,aAAf,SACI,sBAAKA,UAAU,2DAAf,UACI,sBAAMA,UAAU,uBAAhB,kCACA,sBAAMA,UAAU,cAAhB,SACI,uBAAOA,UAAU,uBAAuBC,KAAK,SAASC,YAAY,SAASC,aAAW,mBC+BvFC,MArCf,SAAuBC,GACnB,OACA,wBAAOL,UAAU,QAAjB,UACI,uBAAOA,UAAU,aAAjB,SACI,+BACI,oBAAIM,MAAM,MAAV,SAAgB,wBAChBL,KAAK,SACLM,QAAS,kBAAMF,EAAMG,iBAFL,2BAGhB,oBAAIF,MAAM,MAAV,SAAgB,wBAChBL,KAAK,SACLM,QAAS,kBAAMF,EAAMI,gBAFL,qBAGhB,oBAAIH,MAAM,MAAV,SAAgB,wBAChBL,KAAK,SACLM,QAAS,kBAAMF,EAAMK,kBAFL,2BAGhB,oBAAIJ,MAAM,MAAV,SAAgB,wBAChBL,KAAK,SACLM,QAAS,kBAAMF,EAAMM,gBAFL,8BAMxB,gCACKN,EAAMO,UAAUC,KAAI,SAAAC,GAAI,OACzB,+BACA,6BAAMA,EAAKC,YACX,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,aACV,6BAAKH,EAAKI,uBCiCPC,E,4MAtDbC,MAAQ,CACNR,YACAM,SAAU,GACVG,SAAUT,G,EAIZU,kBAAoB,SAACC,GAAW,IAAD,EACLA,EAAMC,OAAtBC,EADqB,EACrBA,KAAMC,EADe,EACfA,MACd,EAAKC,SAAL,eAAgBF,EAAMC,IACtB,IAAME,EAAc,EAAKR,MAAMC,SAASQ,QAAO,SAACC,GAC9C,OAAOA,EAASZ,SAASa,cAAcC,SAASN,EAAMK,kBAExD,EAAKJ,SAAS,CAACf,UAAWgB,K,EAI5BpB,cAAgB,WACd,IAAII,EAAY,EAAKQ,MAAMR,UAAUqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEnB,UAAYoB,EAAEpB,UAAa,GAAK,KACvF,EAAKY,SAAS,CAACf,e,EAEjBH,aAAe,WACb,IAAIG,EAAY,EAAKQ,MAAMR,UAAUqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAElB,SAAWmB,EAAEnB,SAAY,GAAK,KACrF,EAAKW,SAAS,CAACf,e,EAEjBF,eAAiB,WACf,IAAIE,EAAY,EAAKQ,MAAMR,UAAUqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEjB,WAAakB,EAAElB,WAAc,GAAK,KACzF,EAAKU,SAAS,CAACf,e,EAEjBD,aAAe,WACb,IAAIC,EAAY,EAAKQ,MAAMR,UAAUqB,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEhB,SAAWiB,EAAEjB,SAAY,GAAK,KACrF,EAAKS,SAAS,CAACf,e,4CAIjB,WACE,OACE,gCACA,cAAC,EAAD,CACAM,SAAUkB,KAAKhB,MAAMF,SACrBI,kBAAmBc,KAAKd,oBACxB,cAAC,EAAD,CACAV,UAAWA,EACXJ,cAAe4B,KAAK5B,cACpBC,aAAc2B,KAAK3B,aACnBC,eAAgB0B,KAAK1B,eACrBC,aAAcyB,KAAKzB,sB,GA/CP0B,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.300395ea.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NavBar() {\nreturn(\n    <div className=\"contatiner\"> \n        <nav className=\"navbar navbar-primary bg-primary justify-content-between\">\n            <span className=\"navbar-brand mb-0 h1\"> Employee Directory!</span>\n            <form className=\"form-inline\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\n\n                </input>\n            </form>\n        </nav>\n    </div>\n)\n}\n\nexport default NavBar;","import React from \"react\";\n\nfunction EmployeeTable(props) {\n    return (\n    <table className=\"table\">\n        <thead className=\"thead-dark\">\n            <tr>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortFirstName()}>First Name:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortLastName()}>Last:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortOccupation()}>Occupation:</button></th>\n                <th scope=\"col\"><button\n                type=\"button\"\n                onClick={() => props.sortLocation()}>Location:</button></th>\n                \n            </tr>\n        </thead>\n        <tbody>\n            {props.employees.map(info => (\n            <tr>\n            <td >{info.firstName}</td>\n            <td>{info.lastName}</td>\n            <td>{info.occupation}</td>\n            <td>{info.location}</td>\n            \n        </tr>\n            ))}\n            \n        </tbody>\n    </table>\n    )\n\n}\n\nexport default EmployeeTable;","import React, { Component } from \"react\";\nimport employees from \"./data/employees.json\";\nimport NavBar from \"./components/NavBar/NavBar\"\nimport EmployeeTable from \"./components/EmployeeTable/EmployeeTable\";\n\n\nclass App extends Component {\n  state = {\n    employees,\n    location: \"\",\n    original: employees\n  };\n \n  //Filter Search\n  handleInputChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({[name]:value});\n    const newLocation = this.state.original.filter((employee) => {\n      return employee.location.toLowerCase().includes(value.toLowerCase());\n    });\n    this.setState({employees: newLocation});\n  };\n\n  //Sort Functions\n  sortFirstName = () => {\n    let employees = this.state.employees.sort((a, b) => (a.firstName > b.firstName) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortLastName = () => {\n    let employees = this.state.employees.sort((a, b) => (a.lastName > b.lastName) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortOccupation = () => {\n    let employees = this.state.employees.sort((a, b) => (a.occupation > b.occupation) ? 1 : -1)\n    this.setState({employees});\n  };\n  sortLocation = () => {\n    let employees = this.state.employees.sort((a, b) => (a.location > b.location) ? 1 : -1)\n    this.setState({employees});\n  };\n  \n\n  render() {\n    return (\n      <div>\n      <NavBar \n      location={this.state.location}\n      handleInputChange={this.handleInputChange} />\n      <EmployeeTable \n      employees={employees}\n      sortFirstName={this.sortFirstName}\n      sortLastName={this.sortLastName}\n      sortOccupation={this.sortOccupation}\n      sortLocation={this.sortLocation}\n      />\n      </div>\n      \n    )\n  }\n  \n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}